version: '3.8'

volumes:
  postgres_data: 
  minio_data: 
  kafka_data: 

services:
  postgres:
    image: postgres:latest
    container_name: a2g-postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: node-api
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  minio:
    image: minio/minio
    container_name: a2g-minio
    ports:
      - "9000:9000"  
      - "9001:9001"  
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  kafka:
    image: bitnami/kafka:latest
    container_name: a2g-kafka
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami/kafka"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9093,CONTROLLER://:9094,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9093,EXTERNAL://localhost:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9094
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=true


  # supertokens:
  #   image: registry.supertokens.io/supertokens/supertokens-postgresql:7.0
  #   container_name: a2g-supertokens
  #   ports:
  #     - "3567:3567"
  #   environment:
  #     - SUPERTOKENS_TELEMETRY=false
  #     - SUPERTOKENS_API_KEY=${SUPERTOKENS_API_KEY}
  #     - POSTGRESQL_CONNECTION_URI=postgresql://admin:admin@postgres:5432/node-api
  #   depends_on:
  #     - postgres

